/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum VerificationEmailResponseStatus {
    Success = "success",
}

export type VerificationEmailResponse = {
    status: VerificationEmailResponseStatus;
};

/** @internal */
export const VerificationEmailResponseStatus$ = z.nativeEnum(VerificationEmailResponseStatus);

/** @internal */
export namespace VerificationEmailResponse$ {
    export type Inbound = {
        status: VerificationEmailResponseStatus;
    };

    export const inboundSchema: z.ZodType<VerificationEmailResponse, z.ZodTypeDef, Inbound> = z
        .object({
            status: VerificationEmailResponseStatus$,
        })
        .transform((v) => ({
            status: v.status,
        }));

    export type Outbound = {
        status: VerificationEmailResponseStatus;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, VerificationEmailResponse> = z
        .object({
            status: VerificationEmailResponseStatus$,
        })
        .transform((v) => ({
            status: v.status,
        }));
}
