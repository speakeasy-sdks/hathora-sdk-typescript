/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type LoginGoogleRequest = {
    /**
     * A Google-signed OIDC ID token representing a player's authenticated identity. Learn how to get an `idToken` [here](https://cloud.google.com/docs/authentication/get-id-token).
     */
    idToken: string;
};

/** @internal */
export namespace LoginGoogleRequest$ {
    export type Inbound = {
        idToken: string;
    };

    export const inboundSchema: z.ZodType<LoginGoogleRequest, z.ZodTypeDef, Inbound> = z
        .object({
            idToken: z.string(),
        })
        .transform((v) => ({
            idToken: v.idToken,
        }));

    export type Outbound = {
        idToken: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LoginGoogleRequest> = z
        .object({
            idToken: z.string(),
        })
        .transform((v) => ({
            idToken: v.idToken,
        }));
}
