/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type CreateBuildParams = {
    /**
     * Tag to associate an external version with a build. It is accessible via [`GetBuildInfo()`](https://hathora.dev/api#tag/BuildV1/operation/GetBuildInfo).
     */
    buildTag?: string | undefined;
};

/** @internal */
export namespace CreateBuildParams$ {
    export type Inbound = {
        buildTag?: string | undefined;
    };

    export const inboundSchema: z.ZodType<CreateBuildParams, z.ZodTypeDef, Inbound> = z
        .object({
            buildTag: z.string().optional(),
        })
        .transform((v) => ({
            ...(v.buildTag === undefined ? null : { buildTag: v.buildTag }),
        }));

    export type Outbound = {
        buildTag?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateBuildParams> = z
        .object({
            buildTag: z.string().optional(),
        })
        .transform((v) => ({
            ...(v.buildTag === undefined ? null : { buildTag: v.buildTag }),
        }));
}
