/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type AchPaymentMethod = {
    bankName?: string | undefined;
    last4?: string | undefined;
};

/** @internal */
export namespace AchPaymentMethod$ {
    export type Inbound = {
        bankName?: string | undefined;
        last4?: string | undefined;
    };

    export const inboundSchema: z.ZodType<AchPaymentMethod, z.ZodTypeDef, Inbound> = z
        .object({
            bankName: z.string().optional(),
            last4: z.string().optional(),
        })
        .transform((v) => ({
            ...(v.bankName === undefined ? null : { bankName: v.bankName }),
            ...(v.last4 === undefined ? null : { last4: v.last4 }),
        }));

    export type Outbound = {
        bankName?: string | undefined;
        last4?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AchPaymentMethod> = z
        .object({
            bankName: z.string().optional(),
            last4: z.string().optional(),
        })
        .transform((v) => ({
            ...(v.bankName === undefined ? null : { bankName: v.bankName }),
            ...(v.last4 === undefined ? null : { last4: v.last4 }),
        }));
}
