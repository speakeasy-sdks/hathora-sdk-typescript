/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Region, Region$ } from "./region";
import { z } from "zod";

export type CreateRoomParams = {
    region: Region;
    /**
     * Optional configuration parameters for the room. Can be any string including stringified JSON. It is accessible from the room via [`GetRoomInfo()`](https://hathora.dev/api#tag/RoomV2/operation/GetRoomInfo).
     */
    roomConfig?: string | undefined;
};

/** @internal */
export namespace CreateRoomParams$ {
    export type Inbound = {
        region: Region;
        roomConfig?: string | undefined;
    };

    export const inboundSchema: z.ZodType<CreateRoomParams, z.ZodTypeDef, Inbound> = z
        .object({
            region: Region$,
            roomConfig: z.string().optional(),
        })
        .transform((v) => ({
            region: v.region,
            ...(v.roomConfig === undefined ? null : { roomConfig: v.roomConfig }),
        }));

    export type Outbound = {
        region: Region;
        roomConfig?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateRoomParams> = z
        .object({
            region: Region$,
            roomConfig: z.string().optional(),
        })
        .transform((v) => ({
            region: v.region,
            ...(v.roomConfig === undefined ? null : { roomConfig: v.roomConfig }),
        }));
}
