/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum InvoiceStatus {
    Pending = "pending",
    Paid = "paid",
    Overdue = "overdue",
}

/**
 * Billing types
 */
export type Invoice = {
    amountDue: number;
    dueDate: Date;
    id: string;
    month: number;
    pdfUrl: string;
    status: InvoiceStatus;
    year: number;
};

/** @internal */
export const InvoiceStatus$ = z.nativeEnum(InvoiceStatus);

/** @internal */
export namespace Invoice$ {
    export type Inbound = {
        amountDue: number;
        dueDate: string;
        id: string;
        month: number;
        pdfUrl: string;
        status: InvoiceStatus;
        year: number;
    };

    export const inboundSchema: z.ZodType<Invoice, z.ZodTypeDef, Inbound> = z
        .object({
            amountDue: z.number(),
            dueDate: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v)),
            id: z.string(),
            month: z.number(),
            pdfUrl: z.string(),
            status: InvoiceStatus$,
            year: z.number(),
        })
        .transform((v) => ({
            amountDue: v.amountDue,
            dueDate: v.dueDate,
            id: v.id,
            month: v.month,
            pdfUrl: v.pdfUrl,
            status: v.status,
            year: v.year,
        }));

    export type Outbound = {
        amountDue: number;
        dueDate: string;
        id: string;
        month: number;
        pdfUrl: string;
        status: InvoiceStatus;
        year: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Invoice> = z
        .object({
            amountDue: z.number(),
            dueDate: z.date().transform((v) => v.toISOString()),
            id: z.string(),
            month: z.number(),
            pdfUrl: z.string(),
            status: InvoiceStatus$,
            year: z.number(),
        })
        .transform((v) => ({
            amountDue: v.amountDue,
            dueDate: v.dueDate,
            id: v.id,
            month: v.month,
            pdfUrl: v.pdfUrl,
            status: v.status,
            year: v.year,
        }));
}
